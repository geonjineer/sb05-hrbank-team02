spring:
  profiles:
    default: test
  application:
    name: hrbank

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 30MB

  jackson:
    time-zone: UTC
    serialization:
      write-dates-as-timestamps: false

  jpa:
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        jdbc.time_zone: UTC
        jdbc.batch_size: 100
        order_inserts: true
        order_updates: true

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    display-request-duration: true
    persist-authorization: true

app:
  error:
    constraint-map:
      uk_employees_email: EMPLOYEE_EMAIL_DUPLICATE
      uk_employees_name:  EMPLOYEE_NAME_DUPLICATE
    sqlstate-map:
      '23505': DUPLICATE_KEY
      '23503': FK_VIOLATION
      '23514': CHECK_VIOLATION
    default-code: INTERNAL_ERROR

server:
  forward-headers-strategy: framework
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto
      internal-proxies: 10\.\d+\.\d+\.\d+|192\.168\.\d+\.\d+|127\.0\.0\.1
    max-swallow-size: -1
    # [추가] 업로드 제한 무시(-1) → 대용량 파일 업로드 시 Tomcat이 요청 버퍼를 삼키지 않고 그대로 전달
  port: ${PORT:8080}

logging:
  level:
    org.hibernate.SQL: off
    org.hibernate.orm.jdbc.bind: info      # 공통은 너무 시끄럽지 않게
    org.hibernate.type.descriptor.sql: info
    org.springframework.web: info
    org.springframework.web.filter.CommonsRequestLoggingFilter: INFO

hrbank:
  storage:
    root: ./storage

  backup:
    cron: "0 0 * * * *"    # 매시 정각
    timezone: "UTC"
